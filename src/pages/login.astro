---
import AuthLayout from '@/layouts/AuthLayout.astro';

const email = Astro.cookies.get('email')?.value ?? '';
const rememberMe = !!email;
---

<AuthLayout title='Login'>
	<div class='w-100 mx-auto rounded-2xl bg-white p-12'>
		<div class='mb-4'>
			<h3 class='text-2xl font-semibold text-gray-800'>Login</h3>
			<p class='text-gray-500'>Please login to your account.</p>
		</div>
		<form class='space-y-5'>
			<div class='space-y-2'>
				<label
					for='email'
					class='text-sm font-medium tracking-wide text-gray-700'
					>Email</label
				>
				<input
					class='w-full rounded-lg border border-gray-300 px-4 py-2 text-base focus:border-green-400 focus:outline-none'
					type='email'
					placeholder='mail@gmail.com'
					name='email'
					id='email'
					value={email}
				/>
			</div>
			<div class='space-y-2'>
				<label
					for='password'
					class='mb-5 text-sm font-medium tracking-wide text-gray-700'
				>
					Password
				</label>
				<input
					class='w-full content-center rounded-lg border border-gray-300 px-4 py-2 text-base focus:border-green-400 focus:outline-none'
					type='password'
					placeholder='Enter your password'
					name='password'
					id='password'
				/>
			</div>
			<div class='flex items-center justify-between'>
				<div class='flex items-center'>
					<input
						id='remember_me'
						checked={rememberMe}
						value={email}
						name='remember_me'
						type='checkbox'
						class='h-4 w-4 rounded border-gray-300 bg-blue-500 focus:ring-blue-400'
					/>
					<label
						for='remember_me'
						class='ml-2 block text-sm text-gray-800'
					>
						Remember me
					</label>
				</div>
				<div class='text-sm'>
					<a
						href='/register'
						class='text-green-400 hover:text-green-500'
					>
						Don't have an account?
					</a>
				</div>
			</div>
			<div>
				<button
					id='btn-submit'
					type='submit'
					class='flex w-full cursor-pointer justify-center rounded-full bg-green-400 p-3 font-semibold tracking-wide text-gray-100 shadow-lg transition duration-300 ease-in hover:bg-green-600 disabled:bg-gray-300'
				>
					Sign in
				</button>
			</div>
			<div class='my-3 flex w-full flex-1'>
				<div class='w-full border-t-2 border-gray-400'></div>
			</div>
			<button
				id='btn-google'
				type='button'
				class='flex w-full cursor-pointer justify-center rounded-full bg-red-400 p-3 font-semibold tracking-wide text-gray-100 shadow-lg transition duration-300 ease-in hover:bg-red-600 disabled:bg-gray-300'
			>
				Google
			</button>
		</form>
		<div class='pt-5 text-center text-xs text-gray-400'>
			<span> Copyright Â© {new Date().getFullYear()} </span>
		</div>
	</div>
</AuthLayout>

<script>
	import { firebase } from '@/firebase/config';
	import { actions } from 'astro:actions';
	import { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';
	import Swal from 'sweetalert2';

	const form = document.querySelector('form') as HTMLFormElement;
	const btnSubmit = document.querySelector('#btn-submit') as HTMLButtonElement;
	const btnGoogle = document.querySelector('#btn-google') as HTMLButtonElement;

	form.addEventListener('submit', async e => {
		e.preventDefault();
		btnSubmit.setAttribute('disabled', 'disabled');

		const formData = new FormData(form);

		const { error, data } = await actions.loginUser(formData);

		if (error) {
			Swal.fire({
				icon: 'error',
				title: 'Oops...',
				text: error.message,
			});
			btnSubmit.removeAttribute('disabled');
			return;
		}

		window.location.replace('/protected');
	});

	btnGoogle.addEventListener('click', async () => {
		btnGoogle.setAttribute('disabled', 'disabled');
		const provider = new GoogleAuthProvider();

		try {
			// Obtener credenciales del lado del cliente
			const credentials = await signInWithPopup(firebase.auth, provider);

			// Verificar las credenciales en el backend
			const { error } = await actions.loginWithGoogle(credentials);

			if (error) {
				Swal.fire({
					icon: 'error',
					title: 'Oops...',
					text: error.message,
				});
				btnGoogle.removeAttribute('disabled');
				return;
			}

			btnGoogle.innerText = 'Redirecting...';
			window.location.replace('/protected');
		} catch (error) {
			console.error(error);
			btnGoogle.removeAttribute('disabled');
		}
	});
</script>
